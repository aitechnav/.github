name: Update Traffic Stats

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily
  workflow_dispatch:

jobs:
  update-traffic:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch Stats for All Repos
        run: |
          # Fetch all repository names in the organization
          repos=$(curl -H "Authorization: token ${{ secrets.README_TOKEN }}" \
          https://api.github.com/orgs/aitechnav/repos | jq -r '.[].name')

          echo "Repositories fetched: $repos"

          # Initialize counters for total views and uniques
          total_views=0
          total_uniques=0

          # Loop through each repository to fetch traffic stats
          for repo in $repos; do
            echo "Fetching stats for $repo"
            response=$(curl -H "Authorization: token ${{ secrets.README_TOKEN }}" \
            https://api.github.com/repos/aitechnav/$repo/traffic/views)

            # Debug the raw API response
            echo "Raw response for $repo:"
            echo "$response"

            # Extract views and uniques using jq
            repo_views=$(echo "$response" | jq -r '.count // 0')
            repo_uniques=$(echo "$response" | jq -r '.uniques // 0')

            # Add to totals
            total_views=$((total_views + repo_views))
            total_uniques=$((total_uniques + repo_uniques))

            echo "Stats for $repo - Views: $repo_views, Uniques: $repo_uniques"
          done

          # Save the totals to a temporary file for the next step
          echo "total_views=$total_views" >> $GITHUB_ENV
          echo "total_uniques=$total_uniques" >> $GITHUB_ENV
        shell: bash

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Update README
        run: |
          # Replace placeholders in README.md with total stats
          sed -i "s/<!-- VIEWS -->/$total_views/" README.md
          sed -i "s/<!-- UNIQUES -->/$total_uniques/" README.md

          # Debug the modified README.md content
          echo "Modified README.md content:"
          cat README.md

          # Check if there are changes
          if git diff --quiet; then
            echo "No changes to commit. Exiting."
            exit 0
          fi

          # Commit and push changes
          git add README.md
          git commit -m "Upda
